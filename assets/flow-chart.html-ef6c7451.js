import{aL as e,O as o,P as p,ad as l,af as n,a9 as i,Q as c,S as r,C as s}from"./framework-127c80d8.js";const u={},d=c("h1",null,"Flowchart",-1),k=r(`<h3 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes" aria-hidden="true">#</a> Attributes</h3><table><thead><tr><th>Attribute</th><th>Type</th><th>Description (see examples for details)</th></tr></thead><tbody><tr><td>nodeItemList</td><td>array</td><td>A list of nodes displayed on the left for dragging and dropping</td></tr><tr><td>nodeList</td><td>array</td><td>A collection of nodes within the flowchart. These can be dragged and are used to convert data into flowchart elements</td></tr><tr><td>linkList</td><td>array</td><td>A collection of lines within the flowchart. These can be dragged and are used to convert data into flowchart elements</td></tr><tr><td>lineStyle</td><td>object</td><td>Styling options for the lines in the flowchart</td></tr><tr><td>height</td><td>string</td><td>The height of the flowchart, default is &quot;600px&quot;</td></tr></tbody></table><p>Example</p><details class="hint-container details"><summary>View Code</summary><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token literal-property property">nodeItemList</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;Start&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Name of the flowchart block</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;start&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// Types: &quot;task&quot;, &quot;finish&quot;, &quot;start&quot;, &quot;end&quot;, &quot;default&quot;. Determines the icon of the flowchart block</span>
        <span class="token literal-property property">shape</span><span class="token operator">:</span> <span class="token string">&quot;rect&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// Shape of the block. Default is &quot;rect&quot;, other options are &quot;ellipse&quot;, &quot;rect&quot;, &quot;diamond&quot;, &quot;circle&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token comment">// To display nodes and links when the flowchart loads, pass nodeList and linkList.</span>
 <span class="token literal-property property">nodeList</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodegtEfnLITiPkkactm&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Format of the id is &quot;node&quot; followed by random alphanumeric characters (0-9A-Za-z), similar to a UUID</span>
      <span class="token string-property property">&quot;width&quot;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token comment">// Width and height of the flowchart block. Customization not recommended</span>
      <span class="token string-property property">&quot;height&quot;</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;coordinate&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>   <span class="token comment">// Coordinates for the block. The current canvas origin (top-left) is (0,0). The first value is the x-axis offset, and the second is the y-axis offset</span>
        <span class="token number">96.5625</span><span class="token punctuation">,</span>
        <span class="token number">304.53125</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Start&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Start&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;start&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
  <span class="token literal-property property">linkList</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;linkUvCdsP55ZQdHDn5R&quot;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;startId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodeZi3EZgYkE5IWy6HX&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Id of the starting node for the link. Must be synchronized with the nodes</span>
      <span class="token string-property property">&quot;endId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node7ebfDyh191SgD4ZX&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Id of the ending node for the link. Must be synchronized with the nodes</span>
      <span class="token string-property property">&quot;startAt&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>  <span class="token comment">// Starting position of the link relative to the flowchart block. For a rectangle, default positions are (0,25), (0,50), (0,75), etc. based on the block&#39;s width and height</span>
        <span class="token number">50</span><span class="token punctuation">,</span>
        <span class="token number">50</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;endAt&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">// Position where the link ends on the ending flowchart block</span>
        <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">25</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token comment">// Text on the link. If there is text, pass meta: { desc: &#39;text&#39; }</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token literal-property property">lineStyle</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&quot;#666666&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Line color</span>
    <span class="token literal-property property">hover</span><span class="token operator">:</span> <span class="token string">&quot;#000&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Line color on hover</span>
    <span class="token literal-property property">textColor</span><span class="token operator">:</span> <span class="token string">&quot;#666666&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Text color on the line description</span>
    <span class="token literal-property property">textHover</span><span class="token operator">:</span> <span class="token string">&quot;#333&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Text color on hover</span>
    <span class="token literal-property property">font</span><span class="token operator">:</span> <span class="token string">&quot;16px Arial&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Font for the line description. Refer to canvas font for settings</span>
    <span class="token literal-property property">dotted</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// Whether it&#39;s a dotted line</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="event" tabindex="-1"><a class="header-anchor" href="#event" aria-hidden="true">#</a> Event</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>chart-data</td><td>Returns the formatted flowchart data (string)</td></tr></tbody></table><details class="hint-container details"><summary>View Code</summary><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flow-chart</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>600px<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@chart-data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chartData<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:lineStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lineStyle<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">lineStyle</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#666666&#39;</span><span class="token punctuation">,</span> <span class="token comment">// Line color</span>
        <span class="token literal-property property">hover</span><span class="token operator">:</span> <span class="token string">&#39;#000&#39;</span><span class="token punctuation">,</span> <span class="token comment">// Line hover color</span>
        <span class="token literal-property property">textColor</span><span class="token operator">:</span> <span class="token string">&#39;#666666&#39;</span><span class="token punctuation">,</span> <span class="token comment">// Line description text color</span>
        <span class="token literal-property property">textHover</span><span class="token operator">:</span> <span class="token string">&#39;#333&#39;</span><span class="token punctuation">,</span> <span class="token comment">// Line description text hover color</span>
        <span class="token literal-property property">font</span><span class="token operator">:</span> <span class="token string">&#39;16px Arial&#39;</span><span class="token punctuation">,</span> <span class="token comment">// Line description text font settings, reference to canvas font</span>
        <span class="token literal-property property">dotted</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// Whether it is a dashed line</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">chartData</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,7);function v(m,h){const a=s("FlowChart"),t=s("ClientOnly");return o(),p("div",null,[d,l(" This primarily includes the basic functionalities for creating, updating, and deleting flowchart nodes, as well as styling options and data printing operations. "),n(t,null,{default:i(()=>[n(a,{style:{width:"1000px !important",position:"relative",left:"-170px"}})]),_:1}),k])}const y=e(u,[["render",v],["__file","flow-chart.html.vue"]]);export{y as default};
