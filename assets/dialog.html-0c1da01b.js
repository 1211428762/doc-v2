import{aL as v,O as h,P as g,Q as l,af as n,a9 as o,S as b,C as a,ad as p}from"./framework-11d1f513.js";const m={name:"",data(){return{show:!1}},mounted(){},methods:{clickEvt(s){this.show=!0,console.log("clickEvt-------",s)}}},f=l("h1",null,"Dialog",-1),y=b(`<h3 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes" aria-hidden="true">#</a> Attributes</h3><table><thead><tr><th>Attribute</th><th>Type</th><th>Options (Default)</th><th>Description</th></tr></thead><tbody><tr><td>clickOverlayClose</td><td>boolean</td><td>true</td><td>Close the dialog by clicking the overlay</td></tr><tr><td>closeIcon</td><td>boolean</td><td>true</td><td>Display the close (x) icon</td></tr><tr><td>show</td><td>boolean</td><td>false</td><td>Control the visibility of the dialog</td></tr><tr><td>showOverlay</td><td>boolean</td><td>false</td><td>Show the overlay</td></tr><tr><td>width</td><td>string</td><td>400px</td><td>Dialog width</td></tr></tbody></table><h3 id="event" tabindex="-1"><a class="header-anchor" href="#event" aria-hidden="true">#</a> Event</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>opened</td><td>Callback after the dialog is opened</td></tr><tr><td>closed</td><td>Callback after the dialog is closed</td></tr></tbody></table><details class="hint-container details"><summary>View Code</summary><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fButton</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clickEvt<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Open Dialog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fButton</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fDialog</span> <span class="token attr-name">:show.sync</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>show<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Dialog Content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fDialog</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">clickEvt</span><span class="token punctuation">(</span><span class="token parameter">evt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>show <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,5);function _(s,t,w,D,e,c){const i=a("cube"),u=a("pet"),d=a("fButton"),r=a("fDialog");return h(),g("div",null,[l("div",null,[n(i),n(u),f,n(d,{onClick:c.clickEvt},{default:o(()=>[p("Open Dialog")]),_:1},8,["onClick"]),n(r,{show:e.show,"onUpdate:show":t[0]||(t[0]=k=>e.show=k)},{default:o(()=>[p(" Dialog Content")]),_:1},8,["show"])]),y])}const x=v(m,[["render",_],["__file","dialog.html.vue"]]);export{x as default};
